name: CI/CD Pipeline for Spring Boot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      minio:
        image: minio/minio
        ports:
          - 9000:9000
        options: --name minio -e MINIO_ROOT_USER=minio -e MINIO_ROOT_PASSWORD=minio1234
        command: server /data

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5433/PlaxiDB
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: jose
      MINIO_URL: http://localhost:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio1234

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install -DskipTests=false

      - name: Run Tests
        run: mvn test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && success()  # Solo despliega si el build es exitoso en la rama main

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build without tests (for deployment)
        run: mvn clean package -DskipTests=true

      - name: Deploy to Server (SCP Example)
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_DESTINATION: ${{ secrets.SERVER_DESTINATION }}
        run: |
          scp -o StrictHostKeyChecking=no target/backend-0.0.1-SNAPSHOT.jar $SERVER_USER@$SERVER_IP:$SERVER_DESTINATION
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << EOF
            pkill -f backend-0.0.1-SNAPSHOT.jar || true
            nohup java -jar $SERVER_DESTINATION/backend-0.0.1-SNAPSHOT.jar &
          EOF
